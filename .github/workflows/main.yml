name: Terraform Deploy

on:
  push:
    # branches: [ master ]
    tags: [ 'v*' ]  # Trigger on version tags
  pull_request:

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/resume-html
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
      
      - name: Create terraform.tfvars using secrets
        run: |
          cat > terraform.tfvars <<EOF
          aws_access_key = "${{ secrets.AWS_ACCESS_KEY }}"
          aws_secret_key = "${{ secrets.AWS_SECRET_KEY }}"
          EOF
      
      # - name: Use secrets as env vars
      #   env:
      #     AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      #     AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      #   run: |
      #     echo $AWS_ACCESS_KEY >> terraform.tfvars
      #     echo $AWS_SECRET_KEY >> terraform.tfvars

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan with tfvars
        run: terraform plan -var-file="terraform.tfvars"

      - name: Terraform Apply with tfvars (on push to main only)
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
